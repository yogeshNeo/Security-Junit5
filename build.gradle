plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id "org.sonarqube" version "4.3.1.3277"
}

group = 'com'
version = 'V15.09.23'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		exclude group: 'junit', module: 'junit'
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.0.4'

	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	runtimeOnly 'com.mysql:mysql-connector-j:8.0.32'
	annotationProcessor 'org.projectlombok:lombok:1.18.26'
	developmentOnly 'org.springframework.boot:spring-boot-devtools:3.0.4'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf:3.0.4'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

	testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
	testImplementation 'org.springframework.security:spring-security-test:6.0.2'
	testImplementation 'org.junit.platform:junit-platform-suite-engine:1.10.0'

}

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
	properties {

		property "sonar.projectKey", "methodSecurity"
		property "sonar.projectName", "methodSecurity"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "admin"
		property "sonar.password", "sonar"
	}
}
